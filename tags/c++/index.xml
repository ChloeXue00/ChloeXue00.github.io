<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C&#43;&#43; on </title>
    <link>/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on </description>
    <generator>Hugo -- 0.147.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何使用 C&#43;&#43; 编写一个 ROS 节点</title>
      <link>/posts/ros%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sun, 17 Nov 2024 00:00:00 +0000</pubDate>
      <guid>/posts/ros%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;p&gt;通过本案例可以掌握：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何使用 C++ 编写一个 ROS 设备驱动节点；&lt;/li&gt;
&lt;li&gt;如何调试 ROS 发布频率、时间戳和消息内容；&lt;/li&gt;
&lt;li&gt;如何结合 rosbag 与 rqt_plot 分析传感器数据的稳定性；&lt;/li&gt;
&lt;li&gt;为后续多传感器时间同步与融合（如 EKF）打下基础。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;多传感器融合中的-ros-驱动开发实战案例&#34;&gt;多传感器融合中的 ROS 驱动开发实战案例&lt;/h1&gt;
&lt;p&gt;在自动驾驶系统中，IMU、GNSS 和雷达等传感器是实现环境感知和车辆定位的关键。本文以 ROS 框架为基础，讲解如何编写一个简单的传感器驱动节点，实现数据采集 → 解析 → 发布 → 可视化，并附带常见调试命令。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-项目结构&#34;&gt;1. 项目结构&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_sensor_driver/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── launch/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── sensor_driver.launch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── src/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── imu_driver_node.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── include/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── imu_driver.hpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── config/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── imu_config.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── CMakeLists.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── package.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;my_sensor_driver： ROS package 根目录，所有内容都放在这里&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;launch/sensor_driver.launch：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ROS 的启动脚本，用 XML 格式描述：
&lt;ul&gt;
&lt;li&gt;启动哪个节点（node）&lt;/li&gt;
&lt;li&gt;使用哪些参数文件（如 config/imu_config.yaml）&lt;/li&gt;
&lt;li&gt;是否输出日志到屏幕等&lt;/li&gt;
&lt;li&gt;用法：&lt;strong&gt;roslaunch my_sensor_driver sensor_driver.launch&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-launch&#34; data-lang=&#34;launch&#34;&gt;&amp;lt;launch&amp;gt;
&amp;lt;!-- 加载 IMU 参数配置 --&amp;gt;
&amp;lt;rosparam file=&amp;#34;$(find my_sensor_driver)/config/imu_config.yaml&amp;#34; command=&amp;#34;load&amp;#34;/&amp;gt;

&amp;lt;!-- 启动 IMU 驱动节点 --&amp;gt;
&amp;lt;node name=&amp;#34;imu_driver&amp;#34; pkg=&amp;#34;my_sensor_driver&amp;#34; type=&amp;#34;imu_driver_node&amp;#34; output=&amp;#34;screen&amp;#34;/&amp;gt;
&amp;lt;/launch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;src/imu_driver_node.cpp&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
